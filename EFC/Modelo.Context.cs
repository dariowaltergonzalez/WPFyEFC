//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DapperEntities : DbContext
    {
        public DapperEntities()
            : base("name=DapperEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sucursalesBox> sucursalesBox { get; set; }
        public virtual DbSet<usuariosBox> usuariosBox { get; set; }
        public virtual DbSet<rolesBox> rolesBox { get; set; }
    
        public virtual int sp_usuariosbox_Insert(string nombre, string pass, Nullable<bool> activo, Nullable<bool> usuarioBloqueado, Nullable<int> idSucursal, Nullable<int> rolesBoxId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var usuarioBloqueadoParameter = usuarioBloqueado.HasValue ?
                new ObjectParameter("UsuarioBloqueado", usuarioBloqueado) :
                new ObjectParameter("UsuarioBloqueado", typeof(bool));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var rolesBoxIdParameter = rolesBoxId.HasValue ?
                new ObjectParameter("rolesBoxId", rolesBoxId) :
                new ObjectParameter("rolesBoxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_usuariosbox_Insert", nombreParameter, passParameter, activoParameter, usuarioBloqueadoParameter, idSucursalParameter, rolesBoxIdParameter);
        }
    
        public virtual ObjectResult<sp_usuariosbox_SelectAll_Result> sp_usuariosbox_SelectAll(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_usuariosbox_SelectAll_Result>("sp_usuariosbox_SelectAll", idSucursalParameter);
        }
    
        public virtual ObjectResult<string> sp_usuariosbox_SelectByPass(string pass)
        {
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_usuariosbox_SelectByPass", passParameter);
        }
    
        public virtual ObjectResult<sp_usuariosbox_SelectAll_SomeColumns_Result> sp_usuariosbox_SelectAll_SomeColumns(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_usuariosbox_SelectAll_SomeColumns_Result>("sp_usuariosbox_SelectAll_SomeColumns", idSucursalParameter);
        }
    
        public virtual int sp_usuariosbox_ReturnValue(Nullable<bool> activo, ObjectParameter retorno)
        {
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_usuariosbox_ReturnValue", activoParameter, retorno);
        }
    }
}
